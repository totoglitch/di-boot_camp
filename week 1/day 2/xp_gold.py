# -*- coding: utf-8 -*-
"""xp gold

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EXuewP0FB0OdLB3wkqtsQUCop7ZsRPT1

Exercise 1: Concatenate lists
Instructions
Write code that concatenates two lists together without using the + sign.
"""

def concat_lists(list1, list2):
  """Concatenates two lists without using the + operator.

  Args:
    list1: The first list.
    list2: The second list.

  Returns:
    A new list containing all elements from list1 and list2.
  """
  new_list = list1[:]
  for item in list2:
    new_list.append(item)
  return new_list
list1 = [1, 2, 3]
list2 = [4, 5, 6]
concatenated_list = concat_lists(list1, list2)
concatenated_list

"""Exercise 2: Range of numbers
Instructions
Create a loop that goes from 1500 to 2500 and prints all multiples of 5 and 7.




"""

for i in range(1500, 2501):
  if i % 5 == 0 and i % 7 == 0:
    print(i)

"""Exercise 3: Check the index
Instructions
Using this variable

names = ['Samus', 'Cortana', 'V', 'Link', 'Mario', 'Cortana', 'Samus']
Ask a user for their name, if their name is in the names list print out the index of the first occurence of the name.

Example: if input is 'Cortana' we should be printing the index 1

"""

names=['samus','cortana','v','link','mario','cortana','samus']
name=input('enter your name')
if name in names:
  print(names.index(name))

"""Exercise 4: Greatest Number
Instructions
Ask the user for 3 numbers and print the greatest number.

Test Data
Input the 1st number: 25
Input the 2nd number: 78
Input the 3rd number: 87

The greatest number is: 87

"""

user_number1 = int(input('enter first number'))
user_number2 = int(input('enter secound number '))
user_number3 = int(input('enter third number '))

greatest_number = max(user_number1, user_number2, user_number3)
print(f"The greatest number is: {greatest_number}")

"""Exercise 5: The Alphabet
Instructions
Create a string of all the letters in the alphabet
Loop over each letter and print a message that contains the letter and whether its a vowel or a consonant.

"""

import string

alphabet = string.ascii_lowercase
vowels = "aeiou"

for letter in alphabet:
  if letter in vowels:
    print(f"{letter} is a vowel")
  else:
    print(f"{letter} is a consonant")

"""Exercise 6: Words and letters
Instructions
Ask a user for 7 words, store them in a list named words.
Ask the user for a single character, store it in a variable called letter.
Loop through the words list and print the index of the first appearence of the letter variable in each word of the list.
If the letter doesnâ€™t exist in one of the words, print a friendly message with the word and the letter.

"""

words = []
for i in range(7):
  word = input(f"Enter word {i+1}: ")
  words.append(word)

letter = input("Enter a single character: ")

for i, word in enumerate(words):
  try:
    index = word.index(letter)
    print(f"The first occurrence of '{letter}' in '{word}' is at index {index}")
  except ValueError:
    print(f"The letter '{letter}' does not exist in the word '{word}'")

"""Exercise 7: Min, Max, Sum
Instructions
Create a list of numbers from one to one million and then use min() and max() to make sure your list actually starts at one and ends at one million. Use the sum() function to see how quickly Python can add a million numbers.


"""

numbers = []
for i in range(1,1000001):
    numbers.append(i)
print(min(numbers))
print(max(numbers))
print(sum(numbers))

"""Exercise 8 : List and Tuple
Instructions
Write a program which accepts a sequence of comma-separated numbers. Generate a list and a tuple which contain every number.

Suppose the following input is supplied to the program: 34,67,55,33,12,98

Then, the output should be:

['34', '67', '55', '33', '12', '98']
('34', '67', '55', '33', '12', '98')

"""

values = input("Input some comma seprated numbers : ")
list_of_values = values.split(",")
tuple_of_values = tuple(list_of_values)
print(list_of_values)
tuple_of_values

"""Exercise 9 : Random number
Instructions
Ask the user to input a number from 1 to 9 (including).
Get a random number between 1 and 9. Hint: random module.
If the user guesses the correct number print a message that says Winner.
If the user guesses the wrong number print a message that says better luck next time.
Bonus: use a loop that allows the user to keep guessing until they want to quit.
Bonus 2: on exiting the loop tally up and display total games won and lost.

"""

import random

def guess_number():
    wins = 0
    losses = 0

    while True:
        try:
            user_guess = int(input("Guess a number between 1 and 9 (or enter 0 to quit): "))
            if user_guess == 0:
                break
            elif not 1 <= user_guess <= 9:
                print("Invalid input. Please enter a number between 1 and 9.")
                continue

            random_number = random.randint(1, 9)

            if user_guess == random_number:
                print("Winner!")
                wins += 1
            else:
                print(f"Better luck next time! The number was {random_number}")
                losses += 1

        except ValueError:
            print("Invalid input. Please enter a valid number.")

    print(f"Total games won: {wins}")
    print(f"Total games lost: {losses}")

guess_number()