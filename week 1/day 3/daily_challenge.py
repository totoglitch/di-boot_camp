# -*- coding: utf-8 -*-
"""daily challenge

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11N_0kgFamcCiSewMfh3cggK5Hza_Q5Ab

Instructions
Challenge 1
Ask a user for a word
Write a program that creates a dictionary. This dictionary stores the indexes of each letter in a list.

Make sure the letters are the keys.
Make sure the letters are strings.
Make sure the indexes are stored in a list and those lists are values.
Examples

"dodo" ➞ { "d": [0, 2], "o": [1, 3] }

"froggy" ➞ { "f":  [0], "r": [1], "o": [2], "g": [3, 4], "y": [5] }

"grapes" ➞ { "g": [0], "r": [1], "a": [2], "p": [3]}


Challenge 2
"""

def create_index_dictionary(word):
  """
  Creates a dictionary that stores the indexes of each letter in a word.

  Args:
    word: The input word (string).

  Returns:
    A dictionary where keys are letters and values are lists of their indexes.
  """

  index_dict = {}
  for index, letter in enumerate(word):
    if letter in index_dict:
      index_dict[letter].append(index)
    else:
      index_dict[letter] = [index]
  return index_dict

# Get user input
user_word = input("Enter a word: ")

# Create and print the dictionary
result_dict = create_index_dictionary(user_word)
result_dict

"""Challenge 2
Create a program that prints a list of the items you can afford in the store with the money you have in your wallet.
Sort the list in alphabetical order.
Return “Nothing” if you can’t afford anything from the store.
Hint : make sure to convert the amount from dollars to numbers. Create a program that deletes the $ sign, and the comma (for thousands)

Examples

The key is the product, the value is the price

items_purchase = {
  "Water": "$1",
  "Bread": "$3",
  "TV": "$1,000",
  "Fertilizer": "$20"
}

wallet = "$300"

➞ ["Bread", "Fertilizer", "Water"]

items_purchase = {
  "Apple": "$4",
  "Honey": "$3",
  "Fan": "$14",
  "Bananas": "$4",
  "Pan": "$100",
  "Spoon": "$2"
}

wallet = "$100"

➞ ["Apple", "Bananas", "Fan", "Honey", "Spoon"]

# In fact the prices of Apple + Honey + Fan + Bananas + Pan is more that $100, so you cannot by the Pan,
# instead you can by the Spoon that is $2

items_purchase = {
  "Phone": "$999",
  "Speakers": "$300",
  "Laptop": "$5,000",
  "PC": "$1200"
}

wallet = "$1"

➞ "Nothing"

"""

def affordable_items(items_purchase, wallet):
    """
    Identifies affordable items from a store based on wallet amount.

    Args:
        items_purchase (dict): Dictionary of items and their prices.
        wallet (str): Wallet amount as a string with '$' and commas.

    Returns:
        list or str: List of affordable items in alphabetical order,
                     or "Nothing" if nothing is affordable.
    """

    affordable = []
    wallet_amount = int(wallet.replace('$', '').replace(',', ''))

    for item, price in items_purchase.items():
        price_amount = int(price.replace('$', '').replace(',', ''))
        if price_amount <= wallet_amount:
            affordable.append(item)

    affordable.sort()

    if not affordable:
      return "Nothing"
    else:
      return affordable


# Example usage
items_purchase1 = {
    "Water": "$1",
    "Bread": "$3",
    "TV": "$1,000",
    "Fertilizer": "$20"
}
wallet1 = "$300"
print(affordable_items(items_purchase1, wallet1))

items_purchase2 = {
    "Apple": "$4",
    "Honey": "$3",
    "Fan": "$14",
    "Bananas": "$4",
    "Pan": "$100",
    "Spoon": "$2"
}
wallet2 = "$100"
print(affordable_items(items_purchase2, wallet2))

items_purchase3 = {
    "Phone": "$999",
    "Speakers": "$300",
    "Laptop": "$5,000",
    "PC": "$1200"
}
wallet3 = "$1"
print(affordable_items(items_purchase3, wallet3))